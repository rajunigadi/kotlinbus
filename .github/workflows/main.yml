name: Build

on:
  push:
    branches: develop

jobs:
  build:
    name: Generate Build
    runs-on: macos-latest

    steps:
      - name: Check out branch
        uses: actions/checkout@v3

      - name: Granting gradlew permissions
        run: chmod +x gradlew

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

      - name: Run connected tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          script: ./gradlew connectedCheck

      - name: Upload connected test report
        uses: actions/upload-artifact@v2
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

      - name: Generate build
        run: bash ./gradlew bundleRelease --stacktrace

      - name: Sign AAB
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ALIAS_PASSWORD }}

      - name: Get release file path
        id: release
        run: echo "::set-output name=aabfile::$(find app/build/outputs/bundle/release/*.aab)"

      - name: Get release file name
        id: zipbundle
        run: echo "::set-output name=filename::$(basename -s .aab app/build/outputs/bundle/release/*.aab)"

      - name: Convert aab to apk
        id: convert_aab
        uses: mukeshsolanki/bundletool-action@v1.0.0
        with:
          aabFile: ${{ steps.release.outputs.aabfile }}
          base64Keystore: ${{ secrets.SIGNING_KEY }}
          keystorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keystoreAlias: ${{ secrets.ALIAS }}
          keyPassword: ${{ secrets.ALIAS_PASSWORD }}

      - name: Zip Files
        uses: papeloto/action-zip@v1
        with:
          files: app/build/outputs/mapping/release/mapping.txt ${{ steps.release.outputs.aabfile }} ${{ steps.convert_aab.outputs.apkPath }}
          dest: ${{ steps.zipbundle.outputs.filename }}.zip

      - name: Get Tag
        id: tag
        run: echo "::set-output name=generated::$(echo ${{ steps.zipbundle.outputs.filename }} | sed "s/Release-//")"

      - name: Create a draft release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ steps.zipbundle.outputs.filename }}.zip
          generateReleaseNotes: true
          draft: true
          tag: ${{ steps.tag.outputs.generated }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sending release build to Slack
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          path: ${{ steps.zipbundle.outputs.filename }}.zip
          channel: android-builds
